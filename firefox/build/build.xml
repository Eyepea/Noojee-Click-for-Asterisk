<project basedir="/home/bsutton/git/Noojee-Click-for-Chrome/firefox" default="all">
	<description>
		Builds the Noojee Click xpi file ready for deployment.
	</description>

	<property name="version" value="1.9.7" />
	<property name="maxMozillaFirefoxVersion" value="30.*" />
	<property name="maxLocalFirefoxVersion" value="30.*" />
	<property name="maxClientFirefoxVersion" value="30.*" />
	<property name="urlHost" value="www.noojee.com.au/" />
	<property name="src" value="${basedir}/srcExtension" />
	<property name="build" value="${basedir}/build" />
	<property name="versionDir" value="${basedir}/versions/${version}" />
	<property name="xpiName" value="noojeeclick-${version}.xpi" />
	<property name="zipName" value="noojeeclick-${version}.zip" />

	 <macrodef name="defineIncludes">
	    <attribute name="fromPath"/>
	 	<attribute name="toPath"/>
	    <sequential>
	    	<fileset id="includes" dir="${src}">
	    		<include name="**/*.xml" />
	    		<include name="**/*.js" />
	    		<include name="**/*.manifest" />
	    		<include name="**/*.xul" />
	    		<exclude name="**/.*" />
	    		<include name="${build}/templates/@{fromPath}/updateinfo-${version}.xml" />
	    		<include name="@{toPath}/src/update.rdf" />
	    		<include name="@{toPath}/src/install.rdf" />
	    	</fileset>
	   	</sequential>
	 </macrodef>

	 <macrodef name="filterSrc">
	    <attribute name="fromPath"/>
	 	<attribute name="toPath"/>
	 	<attribute name="maxFirefoxVersion"/>
	    <sequential>
			<description>
				Sub target which is responsible for substituting tokens found in files
			</description>
			<mkdir dir="${versionDir}" />
			<!-- copy all of the core files and update the version no. in the about box -->
			<copy  todir="@{toPath}/src" overwrite="True">
				<fileset refid="includes"/>
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
						<token key="maxFirefoxVersion" value="@{maxFirefoxVersion}" />
						<token key="urlHost" value="${urlHost}" />
					</replacetokens>
				</filterchain>
			</copy>
	
	    	<!-- copy images with no filter as they are binary and filters corrupt them -->
			<copy  todir="@{toPath}/src" overwrite="True">
				<fileset dir="${src}">
					<include name="**/*.png" />
					<exclude name="**/.*" />
				</fileset>
			</copy>

			<!-- create the update.rdf using the @{path} specific setting -->
			<echo>Copy update.rdf</echo>
			<copy file="@{fromPath}/update.rdf" tofile="@{toPath}/src/update.rdf" overwrite="True">
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
						<token key="maxFirefoxVersion" value="@{maxFirefoxVersion}" />
						<token key="urlHost" value="${urlHost}" />
					</replacetokens>
				</filterchain>
			</copy>

			<!-- create the install.rdf using the @{path} specific setting -->
			<echo>Copy install.rdf</echo>
			<copy file="@{fromPath}/install.rdf" tofile="@{toPath}/src/install.rdf" overwrite="True">
				<filterchain>
					<replacetokens>
						<token key="version" value="${version}" />
						<token key="maxFirefoxVersion" value="@{maxFirefoxVersion}" />
						<token key="urlHost" value="${urlHost}" />
					</replacetokens>
				</filterchain>
			</copy>
	   	</sequential>
	 </macrodef>
	
	 <macrodef name="createDirs">
	    <attribute name="fromPath"/>
	 	<attribute name="toPath"/>
	    <sequential>
			<echo message="Building @{toPath}"/>
			<mkdir dir="@{toPath}" />
			<mkdir dir="@{toPath}/src" />
			<delete file="@{toPath}/${xpiName}" />
			<jar basedir="@{toPath}/src" duplicate="fail" excludes="**/*" destfile="@{toPath}/${xpiName}">
		    	<fileset dir="@{toPath}/src">
		    		<include name="**/*.xml" />
		    		<include name="**/*.js" />
		    		<include name="**/*.png" />
		    		<include name="**/*.manifest" />
		    		<include name="**/*.rdf" />
		    		<include name="**/*.xul" />
		    		<exclude name="**/.*" />
		    	</fileset>
			</jar>
			<copy file="@{toPath}/src/update.rdf" tofile="@{toPath}/update.rdf" overwrite="True">
			</copy>
			<copy file="${build}/templates/updateinfo/${version}/updateinfo-${version}.xml" tofile="@{toPath}/updateinfo-${version}.xml" overwrite="True">
			</copy>
	    	
			<zip basedir="@{toPath}" duplicate="fail" excludes="**/*" destfile="@{toPath}/${zipName}">
		    	<fileset dir="@{toPath}">
		    		<include name="*.xml" />
		    		<include name="*.rdf" />
		    		<include name="*.htm" />
		    		<include name="*.xpi" />
		    		<exclude name="**/.*" />
		    	</fileset>
			</zip>

	   	</sequential>
	 </macrodef>


	<target name="mozilla">
		<description>
			Builds an xpi suitable for hosting on the mozilla plugin website.
		</description>
		<echo>Building mozilla</echo>
		<property name="maxFirefoxVersion" value="15.*" />
		<defineIncludes  fromPath="mozilla" toPath="${versionDir}/mozilla"/>
		<filterSrc fromPath="build/templates/mozilla" toPath="${versionDir}/mozilla" maxFireFoxVersion="${maxMozillaFirefoxVersion}" />
		<createDirs  fromPath="mozilla" toPath="${versionDir}/mozilla" />
	</target>
	
	<target name="local">
		<description>
			Builds an xpi suitable for hosting locally
		</description>
		<echo>Building Local</echo>
		<defineIncludes  fromPath="local" toPath="${versionDir}/local" />
		<filterSrc fromPath="build/templates/local" toPath="${versionDir}/local" maxFireFoxVersion="${maxLocalFirefoxVersion}"/>
		<createDirs  fromPath="local" toPath="${versionDir}/local" />
	</target>

	<target name="debug">
		<description>
			sets the required files for debugging
		</description>
		<echo>Building Debug version</echo>
		<echo>Copy install.rdf</echo>
		<copy file="${build}/templates/local/install.rdf" tofile="${src}/install.rdf" overwrite="True">
			<filterchain>
				<replacetokens>
					<token key="version" value="${version}" />
					<token key="maxFirefoxVersion" value="${maxLocalFirefoxVersion}" />
					<token key="urlHost" value="${urlHost}" />
				</replacetokens>
			</filterchain>
		</copy>

		<copy file="${build}/templates/local/update.rdf" tofile="${src}/update.rdf" overwrite="True">
			<filterchain>
				<replacetokens>
					<token key="version" value="${version}" />
					<token key="maxFirefoxVersion" value="${maxLocalFirefoxVersion}" />
					<token key="urlHost" value="${urlHost}" />
				</replacetokens>
			</filterchain>
		</copy>
	</target>


	<target name="all" depends="mozilla,local,debug">
	</target>
	
	
	<target name="install" depends="all">
		<!-- Install noojee click into firefox -->
		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="./test/devinstall.sh" />
		</exec>
		<!-- kill firefox as we must restart after installing xul -->
		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="killall firefox" />
		</exec>

		<exec dir="." executable="/bin/bash">
			<arg value="--login" />
			<arg value="-i" />
			<arg value="-c" />
			<arg value="killall firefox-bin" />
		</exec>
		
		<!-- now restart firefox -->
		<exec dir="." executable="/bin/bash">
			<arg value="./test/restartfirefox.sh" />
		</exec>
	</target>


</project>
	


